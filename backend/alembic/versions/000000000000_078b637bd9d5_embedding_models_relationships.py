"""embedding models relationships
Revision ID: 078b637bd9d5
Revises: 2c573133f9b6
Create Date: 2024-05-16 13:17:29.538371
"""

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic
revision = "078b637bd9d5"
down_revision = "2c573133f9b6"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("groups", sa.Column("embedding_model_id", sa.UUID(), nullable=True))
    op.create_foreign_key(
        "groups_embedding_model_id_fkey",
        "groups",
        "embedding_models",
        ["embedding_model_id"],
        ["id"],
        ondelete="SET NULL",
    )

    op.add_column(
        "info_blobs", sa.Column("embedding_model_id", sa.UUID(), nullable=True)
    )
    op.create_foreign_key(
        "info_blobs_embedding_model_id_fkey",
        "info_blobs",
        "embedding_models",
        ["embedding_model_id"],
        ["id"],
        ondelete="SET NULL",
    )

    op.add_column(
        "tenants", sa.Column("default_embedding_model_id", sa.UUID(), nullable=True)
    )
    op.create_foreign_key(
        "tenants_embedding_model_id_fkey",
        "tenants",
        "embedding_models",
        ["default_embedding_model_id"],
        ["id"],
        ondelete="SET NULL",
    )

    # Get completion models
    conn = op.get_bind()
    res = conn.execute(sa.text("SELECT id, name FROM embedding_models"))
    models = res.fetchall()

    for model in models:
        embedding_model_id = model[0]
        embedding_model_name = model[1]

        # update groups
        conn.execute(
            sa.text(
                """
                UPDATE groups
                SET embedding_model_id = :embedding_model_id
                WHERE embedding_model = :embedding_model_name
                """
            ),
            parameters={
                "embedding_model_id": embedding_model_id,
                "embedding_model_name": embedding_model_name,
            },
        )
        # update info_blobs
        conn.execute(
            sa.text(
                """
                UPDATE info_blobs
                SET embedding_model_id = :embedding_model_id
                WHERE embedding_model = :embedding_model_name
                """
            ),
            parameters={
                "embedding_model_id": embedding_model_id,
                "embedding_model_name": embedding_model_name,
            },
        )
        # update tenants
        conn.execute(
            sa.text(
                """
                UPDATE tenants
                SET default_embedding_model_id = :embedding_model_id
                WHERE default_embedding_model = :embedding_model_name
                """
            ),
            parameters={
                "embedding_model_id": embedding_model_id,
                "embedding_model_name": embedding_model_name,
            },
        )

    op.drop_column("groups", "embedding_model")
    op.drop_column("tenants", "default_embedding_model")
    op.drop_column("info_blobs", "embedding_model")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "tenants",
        sa.Column(
            "default_embedding_model", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
    )

    op.add_column(
        "info_blobs",
        sa.Column("embedding_model", sa.VARCHAR(), autoincrement=False, nullable=False),
    )

    op.add_column(
        "groups",
        sa.Column("embedding_model", sa.VARCHAR(), autoincrement=False, nullable=False),
    )

    # Get completion models
    conn = op.get_bind()
    res = conn.execute(sa.text("SELECT id, name FROM embedding_models"))
    models = res.fetchall()

    for model in models:
        embedding_model_id = model[0]
        embedding_model_name = model[1]

        # update groups
        conn.execute(
            sa.text(
                """
                UPDATE groups
                SET embedding_model = :embedding_model_name
                WHERE embedding_model_id = :embedding_model_id
                """
            ),
            parameters={
                "embedding_model_id": embedding_model_id,
                "embedding_model_name": embedding_model_name,
            },
        )
        # update info_blobs
        conn.execute(
            sa.text(
                """
                UPDATE info_blobs
                SET embedding_model = :embedding_model_name
                WHERE embedding_model_id = :embedding_model_id
                """
            ),
            parameters={
                "embedding_model_id": embedding_model_id,
                "embedding_model_name": embedding_model_name,
            },
        )
        # update tenants
        conn.execute(
            sa.text(
                """
                UPDATE tenants
                SET default_embedding_model = :embedding_model_name
                WHERE default_embedding_model_id = :embedding_model_id
                """
            ),
            parameters={
                "embedding_model_id": embedding_model_id,
                "embedding_model_name": embedding_model_name,
            },
        )

    op.drop_constraint("tenants_embedding_model_id_fkey", "tenants", type_="foreignkey")
    op.drop_column("tenants", "default_embedding_model_id")

    op.drop_constraint(
        "info_blobs_embedding_model_id_fkey", "info_blobs", type_="foreignkey"
    )
    op.drop_column("info_blobs", "embedding_model_id")

    op.drop_constraint("groups_embedding_model_id_fkey", "groups", type_="foreignkey")
    op.drop_column("groups", "embedding_model_id")

    # ### end Alembic commands ###
