"""add direct assistant_id to questions
Revision ID: abad1a30c0a8
Revises: 8371fe628586
Create Date: 2025-03-11 14:28:16.666498
"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic
revision = "abad1a30c0a8"
down_revision = "8371fe628586"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("questions", sa.Column("assistant_id", sa.UUID(), nullable=True))
    op.create_foreign_key(
        "fk_questions_assistant_id",
        "questions",
        "assistants",
        ["assistant_id"],
        ["id"],
        ondelete="SET NULL",
    )

    # Backfill assistant_id for existing questions based on session's assistant_id
    # Update questions.assistant_id using the session's assistant_id where assistant_id is NULL
    # and only when tool_assistant_id is NULL (meaning this was answered by the main assistant)
    op.execute(
        """
        UPDATE questions
        SET assistant_id = sessions.assistant_id
        FROM sessions
        WHERE questions.session_id = sessions.id
        AND questions.assistant_id IS NULL
        AND questions.tool_assistant_id IS NULL
        AND sessions.assistant_id IS NOT NULL
        """
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("fk_questions_assistant_id", "questions", type_="foreignkey")
    op.drop_column("questions", "assistant_id")
    # ### end Alembic commands ###
