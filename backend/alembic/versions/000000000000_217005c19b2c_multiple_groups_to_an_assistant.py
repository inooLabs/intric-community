"""multiple groups to an assistant
Revision ID: 217005c19b2c
Revises: 79994f41fa6e
Create Date: 2023-12-06 14:08:00.638356
"""

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic
revision = '217005c19b2c'
down_revision = '79994f41fa6e'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_table(
        'agents_groups',
        sa.Column('agent_id', sa.Integer(), nullable=True),
        sa.Column('group_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['agent_id'],
            ['assistants.id'],
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['group_id'],
            ['groups.id'],
            ondelete='CASCADE',
        ),
    )

    conn = op.get_bind()
    assistants = conn.execute(sa.text("SELECT * FROM assistants"))

    for a in assistants.fetchall():
        if a.group_id is not None:
            conn.execute(
                sa.text(
                    "INSERT INTO agents_groups (agent_id, group_id) VALUES (:agent_id,"
                    " :group_id)"
                ),
                parameters={"agent_id": a.id, "group_id": a.group_id},
            )

    op.alter_column(
        'assistants',
        'name',
        existing_type=sa.TEXT(),
        type_=sa.String(),
        existing_nullable=False,
    )
    op.alter_column(
        'assistants',
        'prompt',
        existing_type=sa.TEXT(),
        type_=sa.String(),
        existing_nullable=False,
    )
    op.alter_column(
        'assistants',
        'completion_model',
        existing_type=sa.TEXT(),
        type_=sa.String(),
        existing_nullable=False,
    )
    op.alter_column('assistants', 'user_id', existing_type=sa.INTEGER(), nullable=False)
    op.alter_column(
        'assistants', 'type', existing_type=sa.TEXT(), type_=sa.String(), nullable=False
    )
    op.drop_constraint('assistants_group_id_fkey', 'assistants', type_='foreignkey')
    op.drop_column('assistants', 'group_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'assistants',
        sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        'assistants_group_id_fkey',
        'assistants',
        'groups',
        ['group_id'],
        ['id'],
        ondelete='SET NULL',
    )
    op.alter_column(
        'assistants', 'type', existing_type=sa.String(), type_=sa.TEXT(), nullable=True
    )
    op.alter_column('assistants', 'user_id', existing_type=sa.INTEGER(), nullable=True)
    op.alter_column(
        'assistants',
        'completion_model',
        existing_type=sa.String(),
        type_=sa.TEXT(),
        existing_nullable=False,
    )
    op.alter_column(
        'assistants',
        'prompt',
        existing_type=sa.String(),
        type_=sa.TEXT(),
        existing_nullable=False,
    )
    op.alter_column(
        'assistants',
        'name',
        existing_type=sa.String(),
        type_=sa.TEXT(),
        existing_nullable=False,
    )
    op.drop_table('agents_groups')
    # ### end Alembic commands ###
