"""add size to info blob
Revision ID: 7a09c6f7ca26
Revises: 3d910af8fc95
Create Date: 2024-03-21 13:13:49.276610
"""

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic
revision = '7a09c6f7ca26'
down_revision = '3d910af8fc95'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tenants', sa.Column('quota_limit', sa.Integer(), nullable=True))
    op.add_column('info_blobs', sa.Column('size', sa.Integer(), nullable=True))

    conn = op.get_bind()
    info_blobs = conn.execute(sa.text("SELECT * FROM info_blobs"))

    for info_blob in info_blobs.fetchall():
        size = len(info_blob.text.encode("utf-8"))

        conn.execute(
            sa.text("UPDATE info_blobs SET size = :size WHERE id = :id"),
            parameters={"size": size, "id": info_blob.id},
        )

    conn.execute(sa.text("UPDATE tenants SET quota_limit = 1073741824"))

    op.alter_column('tenants', 'quota_limit', nullable=False)
    op.alter_column('info_blobs', 'size', nullable=False)
    op.alter_column('users', 'quota_size', new_column_name='quota_limit')
    op.drop_column('users', 'quota_used')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'users',
        sa.Column('quota_used', sa.INTEGER(), autoincrement=False, nullable=True),
    )

    conn = op.get_bind()
    conn.execute(sa.text("UPDATE users SET quota_used = 0"))

    op.alter_column('users', 'quota_used', nullable=False)
    op.alter_column('users', 'quota_limit', new_column_name='quota_size')
    op.drop_column('tenants', 'quota_limit')
    op.drop_column('info_blobs', 'size')
    # ### end Alembic commands ###
