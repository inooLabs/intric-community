"""modules table and logging column on assistants and services
Revision ID: 6f7e4a4ecae3
Revises: 3d4ba749cdcb
Create Date: 2023-12-14 16:53:18.887284
"""

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic
revision = '6f7e4a4ecae3'
down_revision = '3d4ba749cdcb'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'modules',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column(
            'created_at',
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'tenants_modules',
        sa.Column('tenant_id', sa.Integer(), nullable=False),
        sa.Column('module_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['module_id'], ['modules.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('tenant_id', 'module_id'),
    )
    op.alter_column(
        'agents_groups', 'agent_id', existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        'agents_groups', 'group_id', existing_type=sa.INTEGER(), nullable=False
    )
    op.add_column(
        'assistants', sa.Column('logging_enabled', sa.Boolean(), nullable=True)
    )
    op.alter_column(
        'tenants',
        'name',
        existing_type=sa.TEXT(),
        type_=sa.String(),
        existing_nullable=False,
    )
    op.alter_column(
        'tenants',
        'default_embedding_model',
        existing_type=sa.TEXT(),
        type_=sa.String(),
        existing_nullable=False,
    )

    conn = op.get_bind()

    conn.execute(sa.text("UPDATE assistants SET logging_enabled = false"))

    op.alter_column('assistants', 'logging_enabled', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        'tenants',
        'default_embedding_model',
        existing_type=sa.String(),
        type_=sa.TEXT(),
        existing_nullable=False,
    )
    op.alter_column(
        'tenants',
        'name',
        existing_type=sa.String(),
        type_=sa.TEXT(),
        existing_nullable=False,
    )
    op.drop_column('assistants', 'logging_enabled')
    op.alter_column(
        'agents_groups', 'group_id', existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        'agents_groups', 'agent_id', existing_type=sa.INTEGER(), nullable=True
    )
    op.drop_table('tenants_modules')
    op.drop_table('modules')
    # ### end Alembic commands ###
