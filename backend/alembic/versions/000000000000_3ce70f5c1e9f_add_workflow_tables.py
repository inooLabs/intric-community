"""add workflow tables
Revision ID: 3ce70f5c1e9f
Revises: cf75cc6897ab
Create Date: 2024-02-03 10:54:41.809639
"""

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic
revision = '3ce70f5c1e9f'
down_revision = 'cf75cc6897ab'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'filters',
        sa.Column('type', sa.String(), nullable=False),
        sa.Column('chain_breaker_message', sa.String(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column(
            'uuid',
            sa.UUID(),
            server_default=sa.text('gen_random_uuid()'),
            nullable=False,
        ),
        sa.Column(
            'created_at',
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_filters_id'), 'filters', ['id'], unique=False)
    op.create_index(op.f('ix_filters_uuid'), 'filters', ['uuid'], unique=True)
    op.create_table(
        'workflows',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column(
            'uuid',
            sa.UUID(),
            server_default=sa.text('gen_random_uuid()'),
            nullable=False,
        ),
        sa.Column(
            'created_at',
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_workflows_id'), 'workflows', ['id'], unique=False)
    op.create_index(op.f('ix_workflows_uuid'), 'workflows', ['uuid'], unique=True)
    op.create_table(
        'steps',
        sa.Column('order', sa.Integer(), nullable=True),
        sa.Column('workflow_id', sa.Integer(), nullable=True),
        sa.Column('assistant_id', sa.Integer(), nullable=False),
        sa.Column('filter_id', sa.Integer(), nullable=True),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column(
            'uuid',
            sa.UUID(),
            server_default=sa.text('gen_random_uuid()'),
            nullable=False,
        ),
        sa.Column(
            'created_at',
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ['assistant_id'],
            ['assistants.id'],
        ),
        sa.ForeignKeyConstraint(['filter_id'], ['filters.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_steps_id'), 'steps', ['id'], unique=False)
    op.create_index(op.f('ix_steps_uuid'), 'steps', ['uuid'], unique=True)
    op.create_table(
        'assistants_steps_guardrails',
        sa.Column('assistant_id', sa.Integer(), nullable=False),
        sa.Column('step_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['assistant_id'], ['assistants.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['step_id'], ['steps.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('assistant_id', 'step_id'),
    )
    op.add_column(
        'assistants', sa.Column('guardrail_active', sa.Boolean(), nullable=True)
    )
    op.alter_column('questions', 'model', existing_type=sa.VARCHAR(), nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('questions', 'model', existing_type=sa.VARCHAR(), nullable=False)
    op.drop_column('assistants', 'guardrail_active')
    op.drop_table('assistants_steps_guardrails')
    op.drop_index(op.f('ix_steps_uuid'), table_name='steps')
    op.drop_index(op.f('ix_steps_id'), table_name='steps')
    op.drop_table('steps')
    op.drop_index(op.f('ix_workflows_uuid'), table_name='workflows')
    op.drop_index(op.f('ix_workflows_id'), table_name='workflows')
    op.drop_table('workflows')
    op.drop_index(op.f('ix_filters_uuid'), table_name='filters')
    op.drop_index(op.f('ix_filters_id'), table_name='filters')
    op.drop_table('filters')
    # ### end Alembic commands ###
