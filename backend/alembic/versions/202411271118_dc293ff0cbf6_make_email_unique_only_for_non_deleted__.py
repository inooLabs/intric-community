"""make email unique only for non-deleted users
Revision ID: dc293ff0cbf6
Revises: 0eff8cfe5d1a
Create Date: 2024-11-27 11:18:28.042847
"""

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic
revision = 'dc293ff0cbf6'
down_revision = '0eff8cfe5d1a'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        'assistant_templates',
        'description',
        existing_type=sa.TEXT(),
        type_=sa.String(),
        existing_nullable=False,
    )
    op.alter_column(
        'assistant_templates',
        'prompt_text',
        existing_type=sa.TEXT(),
        type_=sa.String(),
        existing_nullable=False,
    )
    op.drop_index('ix_users_email', table_name='users')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.create_index(
        'idx_unique_active_user_email',
        'users',
        ['email'],
        unique=True,
        postgresql_where=sa.text('deleted_at IS NULL'),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        'idx_unique_active_user_email',
        table_name='users',
        postgresql_where=sa.text('deleted_at IS NULL'),
    )
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.alter_column(
        'assistant_templates',
        'prompt_text',
        existing_type=sa.String(),
        type_=sa.TEXT(),
        existing_nullable=False,
    )
    op.alter_column(
        'assistant_templates',
        'description',
        existing_type=sa.String(),
        type_=sa.TEXT(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
